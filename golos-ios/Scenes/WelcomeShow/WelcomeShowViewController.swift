//
//  WelcomeShowViewController.swift
//  golos-ios
//
//  Created by msm72 on 08.06.2018.
//  Copyright (c) 2018 golos. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import GoloSwift

// MARK: - Input & Output protocols
protocol WelcomeShowDisplayLogic: class {}

class WelcomeShowViewController: BaseViewController {
    // MARK: - Properties
    var scrollLabels    =   [UILabel]()
    
    let scrollStrings   =   [
                                "Blog Platform 0".localized(),
                                "Blog Platform 1".localized(),
                                "Blog Platform 2".localized(),
                                "Blog Platform 3".localized()
                            ]

    var router: (NSObjectProtocol & WelcomeShowRoutingLogic & WelcomeShowDataPassing)?
    
    
    // MARK: - IBOutlets
    @IBOutlet weak var welcomeLabel: UILabel! {
        didSet {
            welcomeLabel.text!.localize()
            
            welcomeLabel.font           =   UIFont.init(name: "SFUIDisplay-Regular", size: 25.0 * widthRatio)
            welcomeLabel.textColor      =   UIColor(hexString: "#000000")
            welcomeLabel.numberOfLines  =   1
            welcomeLabel.textAlignment  =   .center
        }
    }
    
    @IBOutlet weak var inGolosLabel: UILabel! {
        didSet {
            inGolosLabel.text!.localize()
            
            inGolosLabel.font           =   UIFont.init(name: "SFUIDisplay-Regular", size: 40.0 * widthRatio)
            inGolosLabel.textColor      =   UIColor(hexString: "#333333")
            inGolosLabel.numberOfLines  =   1
            inGolosLabel.textAlignment  =   .center
        }
    }
    
    @IBOutlet weak var titlesScrollView: UIScrollView! {
        didSet {
            titlesScrollView.delegate   =   self
            
            for string in self.scrollStrings {
                let titleLabel              =   UILabel()
                
                titleLabel.text             =   string
                titleLabel.font             =   UIFont.init(name: "SFUIDisplay-Regular", size: 16.0 * widthRatio)
                titleLabel.textColor        =   UIColor(hexString: "#333333")
                titleLabel.numberOfLines    =   2
                titleLabel.textAlignment    =   .center
                
                titlesScrollView.addSubview(titleLabel)
                scrollLabels.append(titleLabel)
            }
        }
    }
    
    @IBOutlet weak var titlesPageControl: UIPageControl! {
        didSet {
            titlesPageControl.numberOfPages = scrollStrings.count
        }
    }

    @IBOutlet weak var loginButton: UIButton!
    @IBOutlet weak var signInButton: UIButton!
    @IBOutlet weak var moreInfoButton: UIButton!

    @IBOutlet weak var actionButtonHeightConstraint: NSLayoutConstraint! {
        didSet {
            actionButtonHeightConstraint.constant = 102.0 * heightRatio
        }
    }
    
    
    // MARK: - Class Initialization
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        
        setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        
        setup()
    }

    deinit {
        Logger.log(message: "Success", event: .severe)
    }
    
    
    // MARK: - Setup
    private func setup() {
        let viewController      =   self
        let router              =   WelcomeShowRouter()
        
        viewController.router   =   router
        router.viewController   =   viewController
    }
    
    
    // MARK: - Routing
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    
    // MARK: - Class Functions
    override func viewDidLoad() {
        super.viewDidLoad()
        
        self.loadViewSettings()
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        Logger.log(message: "Success", event: .severe)
        
        navigationController?.setNavigationBarHidden(true, animated: true)
    }
    
    override func viewWillDisappear(_ animated: Bool) {
        super.viewWillDisappear(animated)
        Logger.log(message: "Success", event: .severe)
        
        navigationController?.setNavigationBarHidden(false, animated: true)
    }

    
    // MARK: - Custom Functions
    private func loadViewSettings() {
        configureBackButton()
    }
    
    
    // MARK: - Layout
    override func viewDidLayoutSubviews() {
        super.viewDidLayoutSubviews()
        Logger.log(message: "Success", event: .severe)
        
        for (index, label) in scrollLabels.enumerated() {
            let pointX                  =   titlesScrollView.bounds.size.width * CGFloat(index)
            var scrollViewBounds        =   titlesScrollView.bounds
            
            scrollViewBounds.origin.x   =   pointX
            label.frame                 =   scrollViewBounds
        }
        
        titlesScrollView.contentSize    =   CGSize(width:   titlesScrollView.bounds.size.width * CGFloat(scrollLabels.count),
                                                   height:  titlesScrollView.bounds.size.height)
        
        loginButton.setTitle("Log In".localized(), for: .normal)
        loginButton.setBlueButtonRoundEdges()

        signInButton.setTitle("Sign In".localized(), for: .normal)
        signInButton.setBorderButtonRoundEdges()

        moreInfoButton.setTitle("More Info".localized(), for: .normal)
        moreInfoButton.setTitleColor(UIColor(hexString: "#7D7D7D"), for: .normal)
    }
    
    
    // MARK: - Actions
    @IBAction func loginButtonPressed(_ sender: Any) {
        router?.routeToLoginShowScene()
    }
    
    @IBAction func signInButtonPressed(_ sender: Any) {
        router?.showRegisterFormOnline()
    }
    
    @IBAction func moreInfoButtonPressed(_ sender: Any) {
        router?.showMoreInfoPageOnline()
    }
}


// MARK: - WelcomeShowDisplayLogic
extension WelcomeShowViewController: WelcomeShowDisplayLogic {}


// MARK: - UIScrollViewDelegate
extension WelcomeShowViewController: UIScrollViewDelegate {
    func scrollViewDidEndDecelerating(_ scrollView: UIScrollView) {
        let scrollViewWidth = scrollView.bounds.size.width
        let pageNumber = scrollView.contentOffset.x / scrollViewWidth
        
        titlesPageControl.currentPage = Int(pageNumber)
        
        Logger.log(message: "\(scrollView.contentOffset.x / scrollViewWidth)", event: .verbose)
        Logger.log(message: "\(scrollView.contentOffset)", event: .verbose)
    }
}
