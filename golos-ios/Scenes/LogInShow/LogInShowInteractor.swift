//
//  LogInShowInteractor.swift
//  golos-ios
//
//  Created by msm72 on 12.06.2018.
//  Copyright (c) 2018 golos. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import GoloSwift

// MARK: - Business Logic protocols
protocol LogInShowBusinessLogic {
    func authorizeUser(withRequestModel requestModel: LogInShowModels.Something.RequestModel)
}

class LogInShowInteractor: LogInShowBusinessLogic {
    // MARK: - Properties
    var presenter: LogInShowPresentationLogic?
    
    
    // MARK: - Class Initialization
    deinit {
        Logger.log(message: "Success", event: .severe)
    }
    

    // MARK: - Business logic implementation
    func authorizeUser(withRequestModel requestModel: LogInShowModels.Something.RequestModel) {
//        let publicKey = self.createPublic()
        
        let responseModel = LogInShowModels.Something.ResponseModel()
        presenter?.presentAuthorizeUser(fromResponseModel: responseModel)
    }
    
}


public struct PublicKey {
    // MARK: - Properties
    public let key: Data
    public let prefix: String

    
    // MARK: - Class Initialization
    init?(key: Data, prefix: String) {
        guard key.count == 33 else { return nil }
        
        self.key        =   key
        self.prefix     =   prefix
    }
}
